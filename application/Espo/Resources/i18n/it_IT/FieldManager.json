{
  "labels": {
    "Dynamic Logic": "Logica dinamica",
    "Name": "Nome",
    "Label": "Etichetta",
    "Type": "Tipo",
    "View Details": "Vedi dettagli"
  },
  "options": {
    "dateTimeDefault": {
      "": "Nessuno",
      "javascript: return this.dateTime.getNow(1);": "Ora",
      "javascript: return this.dateTime.getNow(5);": "Ora (5m)",
      "javascript: return this.dateTime.getNow(15);": "Ora (15m)",
      "javascript: return this.dateTime.getNow(30);": "Ora (30m)",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(1, 'hours', 15);": "+1 ora",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(2, 'hours', 15);": "+2 ore",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(3, 'hours', 15);": "+3 ore",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(4, 'hours', 15);": "+4 ore",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(5, 'hours', 15);": "+5 ore",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(6, 'hours', 15);": "+6 ore",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(7, 'hours', 15);": "+7 ore",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(8, 'hours', 15);": "+8 ore",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(9, 'hours', 15);": "+9 ore",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(10, 'hours', 15);": "+10 ore",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(11, 'hours', 15);": "+11 ore",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(12, 'hours', 15);": "+12 ore",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(1, 'days', 15);": "+1 giorno",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(2, 'days', 15);": "+2 giorni",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(3, 'days', 15);": "+3 giorni",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(4, 'days', 15);": "+4 giorni",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(5, 'days', 15);": "+5 giorni",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(6, 'days', 15);": "+6 giorni",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(1, 'week', 15);": "+1 settimana"
    },
    "dateDefault": {
      "": "Nessuno",
      "javascript: return this.dateTime.getToday();": "Oggi",
      "javascript: return this.dateTime.getDateShiftedFromToday(1, 'days');": "+1 giorno",
      "javascript: return this.dateTime.getDateShiftedFromToday(2, 'days');": "+2 giorni",
      "javascript: return this.dateTime.getDateShiftedFromToday(3, 'days');": "+3 giorni",
      "javascript: return this.dateTime.getDateShiftedFromToday(4, 'days');": "+4 giorni",
      "javascript: return this.dateTime.getDateShiftedFromToday(5, 'days');": "+5 giorni",
      "javascript: return this.dateTime.getDateShiftedFromToday(6, 'days');": "+6 giorni",
      "javascript: return this.dateTime.getDateShiftedFromToday(7, 'days');": "+7 giorni",
      "javascript: return this.dateTime.getDateShiftedFromToday(8, 'days');": "+8 giorni",
      "javascript: return this.dateTime.getDateShiftedFromToday(9, 'days');": "+9 giorni",
      "javascript: return this.dateTime.getDateShiftedFromToday(10, 'days');": "+10 giorni",
      "javascript: return this.dateTime.getDateShiftedFromToday(1, 'weeks');": "+1 settimana",
      "javascript: return this.dateTime.getDateShiftedFromToday(2, 'weeks');": "+2 settimane",
      "javascript: return this.dateTime.getDateShiftedFromToday(3, 'weeks');": "+3 settimane",
      "javascript: return this.dateTime.getDateShiftedFromToday(1, 'months');": "+1 mese",
      "javascript: return this.dateTime.getDateShiftedFromToday(2, 'months');": "+2 mesi",
      "javascript: return this.dateTime.getDateShiftedFromToday(3, 'months');": "+3 mesi",
      "javascript: return this.dateTime.getDateShiftedFromToday(4, 'months');": "+4 mesi",
      "javascript: return this.dateTime.getDateShiftedFromToday(5, 'months');": "+5 mesi",
      "javascript: return this.dateTime.getDateShiftedFromToday(6, 'months');": "+6 mesi",
      "javascript: return this.dateTime.getDateShiftedFromToday(7, 'months');": "+7 mesi",
      "javascript: return this.dateTime.getDateShiftedFromToday(8, 'months');": "+8 mesi",
      "javascript: return this.dateTime.getDateShiftedFromToday(9, 'months');": "+9 mesi",
      "javascript: return this.dateTime.getDateShiftedFromToday(10, 'months');": "+10 mesi",
      "javascript: return this.dateTime.getDateShiftedFromToday(11, 'months');": "+11 mesi",
      "javascript: return this.dateTime.getDateShiftedFromToday(1, 'year');": "+1 anno"
    },
    "globalRestrictions": {
      "forbidden": "Vietato",
      "internal": "Interno",
      "onlyAdmin": "Solo Admin",
      "readOnly": "Solo Lettura",
      "nonAdminReadOnly": "Solo lettura per i non amministratori"
    }
  },
  "tooltips": {
    "audited": "Gli aggiornamenti verranno registrati nel flusso attivita.",
    "required": "Il campo sarà obbligatorio. Non potrà essere vuoto.",
    "default": "Sarà impostato al valore predefinito durante la creazione.",
    "min": "Valore minimo accettabile.",
    "max": "Valore massimo accettabile.",
    "seeMoreDisabled": "Se non selezionato, i testi lunghi saranno tagliati.",
    "lengthOfCut": "Lunghezza del testo prima del taglio.",
    "maxLength": "Lunghezza massima accettabile del testo.",
    "before": "Il valore della data deve essere precedente al valore della data del campo specificato.",
    "after": "Il valore della data deve essere successivo al valore della data del campo specificato.",
    "readOnly": "Il valore del campo non può essere specificato dall'utente. Ma può essere calcolato da una formula.",
    "maxFileSize": "Se vuoto o 0 allora nessun limite.",
    "fileAccept": "Quali tipi di file accettare. È possibile aggiungere elementi personalizzati.",
    "barcodeLastChar": "Per tipo EAN-13.",
    "conversionDisabled": "L'azione di conversione della valuta non verrà applicata a questo campo.",
    "cutHeight": "Un testo maggiore di un valore specificato verrà troncato e verrà visualizzato il pulsante 'Mostra altro'.",
    "urlStrip": "Rimuove il protocollo e lo slash finale.",
    "pattern": "Un'espressione regolare per verificare il valore di un campo. Definire un'espressione o selezionarne una predefinita.",
    "options": "Un elenco di possibili valori e delle rispettive etichette.",
    "optionsArray": "Un elenco di possibili valori e delle rispettive etichette. Se vuoto, il campo consente di inserire valori personalizzati.",
    "maxCount": "Numero massimo di elementi selezionabili.",
    "displayAsList": "Ogni elemento è inserito in una nuova riga.",
    "optionsVarchar": "Un elenco di valori per il completamento automatico.",
    "currencyDecimal": "Usa il DB di tipo Decimale. Nell'applicazione, i valori saranno rappresentati come stringhe. Selezionare questo parametro se è richiesta maggiore precisione.",
    "optionsReference": "Riutilizza le opzioni di un altro campo.",
    "readOnlyAfterCreate": "Il valore del campo può essere specificato quando si crea un nuovo record. Successivamente, il campo diventerà di sola lettura. Può comunque essere calcolato con una formula.",
    "linkReadOnly": "Il valore del campo non può essere specificato dall'utente. Ma può essere calcolato con una formula.\n\nInoltre, disabilita la possibilità di creare un record correlato dai pannelli delle relazioni.",
    "relateOnImport": "Quando si importa con questo campo, si mette automaticamente in relazione un record con un record straniero corrispondente. Utilizzare questa funzionalità solo se il campo straniero è considerato unico.",
    "preview": "Mostra il pulsante di anteprima. Applicabile se è abilitato il Markdown.",
    "itemsEditable": "Gli elementi possono essere modificati. Applicabile solo se non vi sono opzioni specificate."
  },
  "fieldParts": {
    "address": {
      "street": "Via",
      "city": "Città",
      "state": "Provincia",
      "country": "Nazione",
      "postalCode": "Codice postale",
      "map": "Mappa"
    },
    "personName": {
      "salutation": "Saluto",
      "first": "Primo",
      "last": "Ultimo",
      "middle": "Secondo Nome"
    },
    "currency": {
      "converted": "(Convertito)",
      "currency": "(Valuta)"
    },
    "datetimeOptional": {
      "date": "Data"
    }
  },
  "fieldInfo": {
    "varchar": "Una singola linea di testo.",
    "enum": "Selectbox, si può selezionare un solo valore.",
    "text": "Un testo multilinea con supporto markdown.",
    "date": "Data senza ora",
    "datetime": "Data e ora",
    "currency": "Un importo in valuta. Un numero float con un codice di valuta.",
    "int": "Un numero intero.",
    "float": "Un numero con una parte decimale.",
    "bool": "Un checkbox. Due valori possibili: true e false.",
    "multiEnum": "Un elenco di valori; è possibile selezionare più valori. L'elenco è ordinato.",
    "checklist": "Un elenco di checkbox.",
    "array": "Un elenco di valori, simile al campo Multi-Enum.",
    "address": "Un indirizzo con via, città, regione, codice postale e nazione.",
    "url": "Per la memorizzazione dei link.",
    "wysiwyg": "Un testo con supporto HTML.",
    "file": "Per il caricamento dei file.",
    "image": "Per il caricamento delle immagini.",
    "attachmentMultiple": "Consente il caricamento di più file.",
    "number": "Un numero autoincrementante di tipo stringa con un possibile prefisso e una lunghezza specifica.",
    "autoincrement": "Un numero intero di sola lettura e autoincrementante.",
    "barcode": "Un codice a barre. Può essere stampato in un PDF.",
    "email": "Un insieme di indirizzi email con i relativi parametri: Cancellato, Invalido, Primario.",
    "phone": "Un insieme di numeri di telefono con i relativi parametri: Tipo, Cancellato, Invalido, Primario.",
    "foreign": "Campo di un record correlato. Di Sola Lettura.",
    "link": "Un record correlato attraverso la relazione Belongs-To (many-to-one o one-to-one).",
    "linkParent": "Un record collegato tramite una relazione Belongs-To-Parent. Può essere di tipi di entità differenti.",
    "linkMultiple": "Un insieme di record correlati attraverso una relazione Has-Many (molti-a-molti o uno-a-molti). Non tutte le relazioni hanno i loro campi multipli. Lo sono solo quelle in cui il parametro Collegamento multiplo è abilitato.",
    "urlMultiple": "Link multipli."
  },
  "messages": {
    "fieldNameIsNotAllowed": "Nome campo '{field}' non è permesso.",
    "fieldAlreadyExists": "Campo '{field}' già esistente in '{entityType}'.",
    "linkWithSameNameAlreadyExists": "Collegamento con il nome '{field}' già esistente in '{entityType}'.",
    "confirmRemove": "Si è sicuri di voler rimuovere il campo *{field}*?\n\nLa rimozione del campo non rimuove i dati dal database. I dati del database verranno rimossi solo se si esegue un hard rebuild.",
    "fieldCreatedAddToLayouts": "Il campo è stato creato. Ora è possibile aggiungerlo ai [layout]({link}).",
    "namingFieldLinkConflict": "Il nome '{field}' è in conflitto con un collegamento."
  },
  "otherFields": {
    "attributes": "Attributi"
  }
}